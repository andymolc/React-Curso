{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","intlimit","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","c","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OAEnCN,EAAc,MAKlB,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,+BCNlBG,EAAO,uCAAG,WAAMC,EAASC,GAAf,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUJ,GAD7C,kBACgEI,UAAUH,GAD1E,sDAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAgBZM,GAhBY,4CAAH,wDCCPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAQ,SAAC,GAAQ,IAAPC,EAAM,EAANA,EAEnB,ECJsB,SAACrB,GACvB,MAA4Bd,mBAAU,CAClCsB,KAAM,GACNc,SAAS,IAFb,mBAAQC,EAAR,KAAgBC,EAAhB,KAwBJ,OAnBIC,qBAAU,WACN1B,EAAQC,GACP0B,MAAK,SAAAf,GACFgB,YAAW,WACPH,EAAS,CACLhB,KAAKG,EACLW,SAAQ,MAEd,UAER,CAACtB,IASAuB,EDrB2BK,CAAcP,GAAhCP,EAAZ,EAAON,KAAYc,EAAnB,EAAmBA,QAanB,OACI,qCACI,oBAAIL,UAAU,kBAAd,SAAiCI,IAE7BC,GAAU,mBAAGL,UAAU,mCAAb,qBAId,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE5BxBiB,EAAe,WAGxB,MAAmC3C,mBAAS,CAAC,cAA7C,mBAAO4C,EAAP,KAAkB7C,EAAlB,KAOA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEQ6C,EAAWpB,KAAI,SAAAW,GAAC,OACZ,cAAC,EAAD,CAEAA,EAAGA,GADEA,Y,MClB7BU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1aa9f3b2.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue,setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length>2){\n            setCategories(cats=>[inputValue,...cats]);\n            // console.log('Submit');\n            setInputValue('');\n        }\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <h1>{inputValue}</h1>\n            <input \n                type='text'\n                value={inputValue}\n                onChange= {handleInputChange}\n            />\n        </form>\n    )    \n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\nexport const getGifs = async(category,intlimit) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${encodeURI(intlimit)}&api_key=bgRltnprAY44G3qiI5vdhS70YPGb5nrt`;\n    const resp = await fetch (url);\n    const {data} = await resp.json();\n    // console.log(data);\n\n    const gifs = data.map (img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    // console.log(gifs);\n    // setImages(gifs);\n    return gifs;\n}\n\n// getGifs();","// import react from \"react\";\n\nexport const GifGridItem = ({id,title,url}) => {\n    // console.log(id,title,url);\n    return (\n        <div className='card animate__animated animate__bounce animate__delay-2s'>\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid=({c}) =>{    \n    // const intlimit=20;\n    const {data:images,loading} = useFetchGifs (c);\n    // console.log(loading);\n    // const [count,setCount] = useState(0);\n    \n    // const [images,setImages] = useState([]);\n\n    // useEffect ( () => {\n    //     getGifs(c,intlimit)\n    //         .then (setImages)\n    // },[])\n\n    \n    \n    return (\n        <>\n            <h3 className=\"animate__fadeIn\">{c}</h3>\n            {\n                loading&& <p className=\"animate__animated animate__flash\">loading</p>\n            }\n            {/* <h3>{count}</h3>\n            <button onClick={()=>setCount(count +1)}>renderizar varias verces bloqueado</button> */}\n            <div className='card-grid'>\n                {\n                    images.map(img => (\n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }        \n            </div>\n        </>        \n    );\n}\n","import { useEffect, useState } from 'react'\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs=(category)=>{\n    const [ state , setState] = useState ({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n        getGifs(category)\n        .then(img => {\n            setTimeout(()=>{\n                setState({\n                    data:img,\n                    loading:false\n                });\n            },3000);            \n        })\n    },[category]);\n\n    // setTimeout(()=>{\n    //     setState({\n    //         data: [1,2,3,4,5,6],\n    //         loading: false\n    //     })\n    // },3000);\n\nreturn state;\n}","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch','Samurai X','Dragon Ball'];\n    const [categories,setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () =>{\n    //     setCategories(['Hunter',...categories]);\n    // }\n    // <button onClick={handleAdd}>Agregar</button>\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = {setCategories}/>\n            <hr/>\n            \n            \n            <ol>\n                {\n                    categories.map(c => (\n                        <GifGrid \n                        key={c}\n                        c={c}\n                        />\n                    ))\n                }\n            </ol>\n\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n  \n  \n\n\n"],"sourceRoot":""}